<!--
    Copyright (c) 2015-2016 Mitsuhiro Ito (nee)

    This software is released under the MIT License.
    http://opensource.org/licenses/mit-license.php
-->

<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RealtimeSearch"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Class="RealtimeSearch.MainWindow"
    Title="{Binding WindowTitle}"
    Height="600"
    Width="800"
    Topmost="{Binding Setting.IsTopmost}"
    Loaded="Window_Loaded" Closing="Window_Closing" Closed="Window_Closed" SourceInitialized="Window_SourceInitialized" >

    <!--
    
    -->

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <local:CommandToVisibilityConverter x:Key="CommandToVisibility"/>
        <local:StringToVisibilityConverter x:Key="StringToVisibility"/>
        <local:NullToVisibilityConverter x:Key="NullToVisibility"/>

        <Style TargetType="{x:Type ListViewItem}">

            <EventSetter Event="Control.MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
            <EventSetter Event="UIElement.PreviewMouseMove" Handler="PreviewMouseMove_Event"/>
            <EventSetter Event="UIElement.PreviewMouseDown" Handler="PreviewMouseDown_Event"/>

            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="開く(_O)" Command="{x:Static local:MainWindow.OpenCommand}"/>
                        <MenuItem Header="既定のアプリで開く" Command="{x:Static local:MainWindow.OpenCommandDefault}" />
                        <MenuItem Header="外部アプリ１で開く" Command="{x:Static local:MainWindow.OpenCommand1}"/>
                        <MenuItem Header="外部アプリ２で開く" Command="{x:Static local:MainWindow.OpenCommand2}"/>
                        <MenuItem Header="外部アプリ３で開く" Command="{x:Static local:MainWindow.OpenCommand3}"/>
                        <Separator/>
                        <MenuItem Header="ファイルの場所を開く(_I)" Command="{x:Static local:MainWindow.OpenPlaceCommand}" />
                        <Separator/>
                        <MenuItem Header="ファイルをコピーする(_C)" Command="{x:Static local:MainWindow.CopyCommand}" />
                        <Separator/>
                        <MenuItem Header="削除(_D)" Command="{x:Static local:MainWindow.DeleteCommand}" />
                        <MenuItem Header="名前の変更(_M)" Command="{x:Static local:MainWindow.RenameCommand}"/>
                        <MenuItem Header="名前をコピーする" Command="{x:Static local:MainWindow.CopyNameCommand}" />
                        <Separator/>
                        <MenuItem Header="プロパティ(_R)" Command="{x:Static local:MainWindow.PropertyCommand}" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsPushPin}" Value="True">
                    <Setter Property="Background" Value="#EEE"/>
                </DataTrigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <DataTemplate x:Key="HeaderTemplateNormal">
            <TextBlock Text="{Binding}" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <Grid>
                <TextBlock Text="{Binding}" Margin="2"/>
                <Path x:Name="arrow" StrokeThickness="1" Stroke="Gray" HorizontalAlignment="Center" Data="M6,5 L10,1 14,5"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <Grid>
                <TextBlock Text="{Binding}" Margin="2"/>
                <Path x:Name="arrow" StrokeThickness = "1" Stroke = "Gray" HorizontalAlignment="Center" Data = "M6,1 L10,5 14,1"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

    </Window.Resources>



    <Grid  Margin="2">

        <DockPanel>

            <DockPanel DockPanel.Dock="Top" Margin="0,0,0,4" >

                <local:DropDownMenuButton DockPanel.Dock="Right" Width="25" Height="25" Style="{StaticResource IconTogglrButton}" Margin="2,0,0,0">
                    <Image Width="16" Height="16" Source="{StaticResource ic_settings_24px}"/>
                    <local:DropDownMenuButton.DropDownContextMenu>
                        <ContextMenu>
                            <MenuItem Header="単語一致" IsCheckable="True" IsChecked="{Binding Setting.SearchOption.IsWord}"/>
                            <MenuItem Header="完全一致" IsCheckable="True" IsChecked="{Binding Setting.SearchOption.IsPerfect}"/>
                            <MenuItem Header="フォルダーを含める" IsCheckable="True" IsChecked="{Binding Setting.SearchOption.AllowFolder}"/>
                            <Separator />
                            <MenuItem Header="設定を開く..." Click="SettingButton_Click"/>
                        </ContextMenu>
                    </local:DropDownMenuButton.DropDownContextMenu>
                </local:DropDownMenuButton>

                <Border BorderBrush="#FFDDDDDD" BorderThickness="1">
                    <DockPanel >
                        <Button DockPanel.Dock="Right" Style="{StaticResource IconButton}" Width="25" Height="25" Command="{x:Static local:MainWindow.WebSearchCommand}" ToolTip="Web検索(Ctrl+F)">
                            <Image Width="16" Height="16" Source="{StaticResource ic_public_24px}"/>
                        </Button>
                        <Button DockPanel.Dock="Right" Style="{StaticResource IconButton}" Width="25" Height="25" Command="{x:Static local:MainWindow.SearchCommand}" ToolTip="再検索(Ctrl+R)">
                            <Image Width="16" Height="16" Source="{StaticResource ic_reflesh_24px}"/>
                        </Button>
                        <ComboBox x:Name="keyword" Text="{Binding Keyword, Delay=200, UpdateSourceTrigger=PropertyChanged}"
                              VerticalAlignment="Center" KeyDown="keyword_KeyDown" ItemsSource="{Binding History.Collection}" IsTextSearchCaseSensitive="True"
                              IsEditable="True" BorderThickness="0" BorderBrush="red" LostFocus="keyword_LostFocus" LostKeyboardFocus="keyword_LostFocus">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding .}" TextTrimming="CharacterEllipsis" MaxWidth="{Binding ElementName=keyword,Path=ActualWidth}" MinWidth="200"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </Border>
            </DockPanel>

            <!-- Debug Info -->
            <StackPanel x:Name="DebugInfo" DockPanel.Dock="Bottom" Visibility="Collapsed">
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Background="#FFF8F8F8">
                    <TextBlock Margin="2" TextWrapping="NoWrap" Text="{Binding Models.SearchEngine.CommandCount, StringFormat={}{0}\, }" />
                    <TextBlock Margin="2" TextWrapping="NoWrap" Text="{Binding Models.SearchEngine.Command}" />
                </StackPanel>
                <TextBox x:Name="LogTextBox" DockPanel.Dock="Bottom" Height="64" VerticalScrollBarVisibility="Visible" />
            </StackPanel>


            <Grid DockPanel.Dock="Bottom" Margin="0" >

                <DockPanel>

                    <Button x:Name="ToggleInforPanel" DockPanel.Dock="Right" Margin="0" Width="20" Height="20" VerticalAlignment="Center"
                            Command="{Binding ToggleDetailVisibleCommand}"
                            ToolTip="ファイル詳細"
                            Style="{StaticResource IconButton}" >
                        <Grid Background="Transparent" >
                            <Path Stroke="#414141" Stretch="Uniform" Margin="2">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Data" Value="m0,10 L10,0 20,10"/>
                                    <Style.Triggers>
                                            <DataTrigger Binding="{Binding Setting.IsDetailVisibled}" Value="True">
                                            <Setter Property="Data" Value="m0,0 L10,10 20,0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                        </Grid>

                    </Button>
        
                    
                    <Grid>
                        <TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Models.Information}" TextDecorations="{x:Null}" >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=indexInformation, Path=Text}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock x:Name="indexInformation" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Models.IndexInformation}" TextDecorations="{x:Null}" />
                    </Grid>
                </DockPanel>
            </Grid>

            
            <Border DockPanel.Dock="Bottom" BorderBrush="LightGray" BorderThickness="0,1,0,0" Margin="0"
                    Visibility="{Binding Setting.IsDetailVisibled, Converter={StaticResource BoolToVisibility}}">
                <TextBox IsReadOnly="True" BorderThickness="0" Margin="5" Background="Transparent"
                         Text="{Binding ElementName=listView01, Path=SelectedItem.Detail, Mode=OneWay}">
                </TextBox>
            </Border>

            <Grid>
                <ListView x:Name="listView01" Foreground="Black" ButtonBase.Click="GridViewColumnHeader_ClickHandler" ItemsSource="{Binding Models.Files}" BorderThickness="0" 
                          FocusVisualStyle="{x:Null}"
                          HorizontalAlignment="Stretch"
                          ScrollViewer.CanContentScroll="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling">

                    <ListView.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>

                        <DataTemplate x:Key="myHeader">
                            <Label Content="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type GridViewColumn}}}"/>
                        </DataTemplate>

                        <!--
                            <DockPanel ToolTip="{Binding Detail}">
                        -->

                        <DataTemplate x:Key="ItemFileNameTemplate">
                            <DockPanel>
                                <CheckBox DockPanel.Dock="Right" Template="{StaticResource PushpinCheckBoxTemplate}" Width="16" Height="16" IsChecked="{Binding IsPushPin}" >
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>

                                <Image DockPanel.Dock="Left" Source="{Binding FileInfo.IconSource}" Width="16" Margin="0,0,4,0"/>
                                <TextBlock x:Name="FileNameTextBlock" Text="{Binding Name}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                            </DockPanel>
                        </DataTemplate>

                        <local:FileSizeConverter x:Key="FileSizeConverter"/>
                        <DataTemplate x:Key="ItemSizeTemplate">
                            <TextBlock Text="{Binding FileInfo.Size, Converter={StaticResource FileSizeConverter}}" HorizontalAlignment="Right"/>
                        </DataTemplate>

                    </ListView.Resources>

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical" CanVerticallyScroll="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.View>
                        <GridView ColumnHeaderTemplate="{StaticResource HeaderTemplateNormal}">
                            <GridViewColumn Width="280" CellTemplate="{StaticResource ItemFileNameTemplate}">
                                <GridViewColumnHeader Content="名前" Tag="."/>
                            </GridViewColumn>

                            <GridViewColumn Header="更新日時" Width="96" DisplayMemberBinding="{Binding FileInfo.LastWriteTime, StringFormat=yyyy/MM/dd HH:mm}" />
                            <GridViewColumn Header="種類" Width="96" DisplayMemberBinding="{Binding FileInfo.TypeName}"/>
                            <GridViewColumn Width="96" CellTemplate="{StaticResource ItemSizeTemplate}" >
                                <GridViewColumnHeader Content="サイズ" Tag="FileInfo.Size"/>
                            </GridViewColumn>

                            <GridViewColumn Header="フォルダー" Width="96" DisplayMemberBinding="{Binding DirectoryName}" />

                        </GridView>
                    </ListView.View>
                </ListView>

                <StackPanel Margin="0,40,0,0" Visibility="{Binding Path=Models.SearchEngine.StateMessage, Converter={StaticResource StringToVisibility}}" HorizontalAlignment="Center" VerticalAlignment="Top" Background="White">
                    <TextBlock Margin="10" TextTrimming="CharacterEllipsis" Text="{Binding Models.SearchEngine.SearchKeyword}" HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Models.SearchEngine.State}" Value="SearchResultEmpty">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                        <Grid Visibility="{Binding ElementName=BusyText, Path=Visibility}" Width="34"/>
                        <TextBlock x:Name="textBlock_Busy" Text="{Binding Path=Models.SearchEngine.StateMessage}" Foreground="Gray"/>
                        <TextBlock x:Name="BusyText" Margin="2,0" Width="30">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Gray"/>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Models.SearchEngine.State}" Value="Search">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <StringAnimationUsingKeyFrames Storyboard.TargetName="BusyText"
                                                                       Storyboard.TargetProperty="Text"
                                                                       Duration="0:0:2.5"
                                                                       RepeatBehavior="Forever">
                                                <DiscreteStringKeyFrame Value="." KeyTime="0:0:0.0" />
                                                <DiscreteStringKeyFrame Value=".." KeyTime="0:0:0.5" />
                                                <DiscreteStringKeyFrame Value="..." KeyTime="0:0:1.0" />
                                                <DiscreteStringKeyFrame Value="...." KeyTime="0:0:1.5" />
                                            </StringAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>

                    </StackPanel>
                </StackPanel>
            </Grid>

        </DockPanel>

        <local:RenameManager x:Name="RenameManager"/>

    </Grid>

</Window>
