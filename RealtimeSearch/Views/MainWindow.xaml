<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:NeeLaboratory.RealtimeSearch.Views"
    xmlns:converters="clr-namespace:NeeLaboratory.RealtimeSearch.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Class="NeeLaboratory.RealtimeSearch.Views.MainWindow"
    Title="{Binding WindowTitle}"
    d:DesignHeight="600"
    d:DesignWidth="800"
    UseLayoutRounding="True"
    Topmost="{Binding IsTopmost}"
    Loaded="Window_Loaded" ContentRendered="Window_ContentRendered" Closing="Window_Closing" Closed="Window_Closed">


    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:StringToVisibilityConverter x:Key="StringToVisibility"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibility"/>
        <converters:ReverseBooleanConverter x:Key="ReverseBooleanConverter"/>
        <converters:FileInfoToIconConverter x:Key="FileInfoToIconConverter" />
        <converters:FileInfoToTypeNameConverter x:Key="FileInfoToTypeNameConverter" />
        <converters:FileItemStateToVisibilityConverter x:Key="FileItemStateToVisibilityConverter" Inverse="True"/>

        <Style TargetType="{x:Type ListViewItem}">

            <EventSetter Event="Control.MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
            <EventSetter Event="UIElement.PreviewMouseMove" Handler="PreviewMouseMove_Event"/>
            <EventSetter Event="UIElement.PreviewMouseDown" Handler="PreviewMouseDown_Event"/>
            <EventSetter Event="ContextMenuOpening" Handler="ContextMenu_Opening"/>

            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu />

                </Setter.Value>
            </Setter>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsPushPin}" Value="True">
                    <Setter Property="Background" Value="#EEE"/>
                </DataTrigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <DataTemplate x:Key="HeaderTemplateNormal">
            <TextBlock Text="{Binding}" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <Grid>
                <TextBlock Text="{Binding}" Margin="2"/>
                <Path x:Name="arrow" StrokeThickness="1" Stroke="Gray" HorizontalAlignment="Center" Data="M6,5 L10,1 14,5"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <Grid>
                <TextBlock Text="{Binding}" Margin="2"/>
                <Path x:Name="arrow" StrokeThickness = "1" Stroke = "Gray" HorizontalAlignment="Center" Data = "M6,1 L10,5 14,1"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding WebSearchCommand}"/>
        <KeyBinding Key="R" Modifiers="Ctrl" Command="{Binding SearchCommand}"/>
        <KeyBinding Key="F5" Command="{Binding SearchCommand}"/>
    </Window.InputBindings>

    <Grid  Margin="2">

        <DockPanel>

            <DockPanel DockPanel.Dock="Top" Margin="0,0,0,4" KeyboardNavigation.TabNavigation="Local">

                <Button DockPanel.Dock="Right" Style="{StaticResource IconButton}" Width="25" Height="25" Command="{Binding ShowSettingCommand}" ToolTip="設定" Margin="2,0,0,0" TabIndex="4">
                    <Image Width="16" Height="16" Source="{StaticResource ic_settings_24px}"/>
                </Button>

                <Border BorderBrush="#FFDDDDDD" BorderThickness="1" UseLayoutRounding="True" SnapsToDevicePixels="True">
                    <DockPanel>
                        <Button DockPanel.Dock="Right" Style="{StaticResource IconButton}" Width="25" Height="25" Command="{Binding WebSearchCommand}" ToolTip="Web検索(Ctrl+F)" TabIndex="3">
                            <Image Width="16" Height="16" Source="{StaticResource ic_public_24px}"/>
                        </Button>
                        <Button DockPanel.Dock="Right" Style="{StaticResource IconButton}" Width="25" Height="25" Command="{Binding SearchCommand}" ToolTip="再検索(Ctrl+R)" TabIndex="2">
                            <Image Width="16" Height="16" Source="{StaticResource ic_reflesh_24px}"/>
                        </Button>
                        <ComboBox x:Name="keyword" Text="{Binding InputKeyword, UpdateSourceTrigger=PropertyChanged}" TabIndex="1"
                              TextBoxBase.TextChanged="Keyword_TextChanged"
                              VerticalAlignment="Center" KeyDown="Keyword_KeyDown" ItemsSource="{Binding History.Collection}" IsTextSearchCaseSensitive="True"
                              IsEditable="True" BorderThickness="0" BorderBrush="red" LostFocus="Keyword_LostFocus" LostKeyboardFocus="Keyword_LostFocus">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" MaxWidth="{Binding ElementName=keyword,Path=ActualWidth}" MinWidth="200"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </Border>
            </DockPanel>

            <!-- Debug Info -->
            <!--
            <StackPanel x:Name="DebugInfo" DockPanel.Dock="Bottom" Visibility="Collapsed">
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Background="#FFF8F8F8">
                    <TextBlock Margin="2" TextWrapping="NoWrap" Text="{Binding Search.SearchEngine.CommandCount, StringFormat={}{0}\, }" />
                    <TextBlock Margin="2" TextWrapping="NoWrap" Text="{Binding Search.SearchEngine.Command}" />
                </StackPanel>
                <TextBox x:Name="LogTextBox" DockPanel.Dock="Bottom" Height="64" VerticalScrollBarVisibility="Visible" />
            </StackPanel>
            -->

            <Grid DockPanel.Dock="Bottom" Margin="0" >

                <DockPanel>

                    <Button x:Name="ToggleInforPanel" DockPanel.Dock="Right" Margin="0" Width="20" Height="20" VerticalAlignment="Center" TabIndex="3"
                            Command="{Binding ToggleDetailVisibleCommand}"
                            ToolTip="ファイル詳細"
                            Style="{StaticResource IconButton}" >
                        <Grid Background="Transparent" >
                            <Path Stroke="#414141" Stretch="Uniform" Margin="2">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Data" Value="m0,10 L10,0 20,10"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDetailVisible}" Value="True">
                                                <Setter Property="Data" Value="m0,0 L10,10 20,0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Grid>

                    </Button>

                    <Grid>
                        <TextBlock Margin="8,0" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Search.Information}" TextDecorations="{x:Null}" />
                    </Grid>
                </DockPanel>
            </Grid>


            <Border DockPanel.Dock="Bottom" BorderBrush="LightGray" BorderThickness="0,1,0,0" Margin="0" Height="100"
                    Visibility="{Binding IsDetailVisible, Converter={StaticResource BoolToVisibility}}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <TextBox IsReadOnly="True" BorderThickness="0" Margin="5" Background="Transparent" IsTabStop="False"
                            Text="{Binding ElementName=ResultListView, Path=SelectedItem.Detail, Mode=OneWay}">
                    </TextBox>
                </ScrollViewer>
            </Border>


            <Grid>
                <ListView x:Name="ResultListView" Foreground="Black" ButtonBase.Click="GridViewColumnHeader_ClickHandler"
                          BorderThickness="0" TabIndex="2"
                          ItemsSource="{Binding Search.SearchResult.Items}"
                          SelectedItem="{Binding SelectedItem}"
                          FocusVisualStyle="{x:Null}"
                          HorizontalAlignment="Stretch"
                          ScrollViewer.CanContentScroll="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling">

                    <ListView.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>

                        <DataTemplate x:Key="myHeader">
                            <Label Content="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type GridViewColumn}}}"/>
                        </DataTemplate>

                        <DataTemplate x:Key="ItemFileNameTemplate">
                            <DockPanel ToolTip="{Binding Detail}" ToolTipService.InitialShowDelay="1000"
                                       ToolTipService.IsEnabled="{Binding ElementName=ResultListView, Path=DataContext.IsTipsVisible}">
                                <CheckBox DockPanel.Dock="Right" Template="{StaticResource PushpinCheckBoxTemplate}" Width="16" Height="16" IsChecked="{Binding IsPushPin}" >
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>

                                <Grid  DockPanel.Dock="Left" Width="16" Margin="0,0,4,0">
                                    <Image Source="{Binding Converter={StaticResource FileInfoToIconConverter}}" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Grid VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,-2,-2" Visibility="{Binding State, Converter={StaticResource FileItemStateToVisibilityConverter}}">
                                        <TextBlock Text="&#xF136;" FontFamily="Segoe MDL2 Assets" Foreground="#F8F8F8"/>
                                        <TextBlock Text="&#xF143;" FontFamily="Segoe MDL2 Assets" Foreground="SteelBlue"/>
                                    </Grid>
                                </Grid>
                                
                                <TextBlock x:Name="FileNameTextBlock" Text="{Binding Name}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                            </DockPanel>
                        </DataTemplate>

                        <converters:FileSizeConverter x:Key="FileSizeConverter"/>
                        <DataTemplate x:Key="ItemSizeTemplate">
                            <TextBlock Text="{Binding Size, Converter={StaticResource FileSizeConverter}}" HorizontalAlignment="Right"/>
                        </DataTemplate>

                    </ListView.Resources>

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical" CanVerticallyScroll="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.View>
                        <GridView ColumnHeaderTemplate="{StaticResource HeaderTemplateNormal}">

                            <GridViewColumn Width="280" CellTemplate="{StaticResource ItemFileNameTemplate}">
                                <GridViewColumnHeader Content="名前" Tag="."/>
                            </GridViewColumn>

                            <GridViewColumn Header="更新日時" Width="96" DisplayMemberBinding="{Binding LastWriteTime, StringFormat=yyyy/MM/dd HH:mm}" />

                            <GridViewColumn Width="96" >
                                <GridViewColumnHeader Content="種類" Tag="Extension" />
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource FileInfoToTypeNameConverter}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="96" CellTemplate="{StaticResource ItemSizeTemplate}" >
                                <GridViewColumnHeader Content="サイズ" Tag="Size" />
                            </GridViewColumn>

                            <GridViewColumn Header="フォルダー" Width="96" DisplayMemberBinding="{Binding DirectoryName}" />

                        </GridView>
                    </ListView.View>

                    <ListView.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding OpenExternalProgramCommand}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="Enter" Modifiers="Ctrl" Command="{Binding OpenDefaultCommand}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D1" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram1Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D2" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram2Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D3" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram3Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D4" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram4Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D5" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram5Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D6" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram6Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D7" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram7Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D8" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram8Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="D9" Modifiers="Ctrl" Command="{Binding OpenSelectedExternalProgram9Command}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyCommand}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="C" Modifiers="Ctrl+Shift" Command="{Binding CopyNameCommand}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedItems, ElementName=ResultListView}"/>
                        <KeyBinding Key="F2" Command="{Binding RenameCommand}"/>
                    </ListView.InputBindings>
                </ListView>

                <!-- Result Message -->
                <Grid x:Name="ResultMessage"
                            HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,50,10,10" Background="White">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="{Binding Path=ResultMessage, Converter={StaticResource StringToVisibility}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Search.IsBusy}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <StackPanel>
                        <TextBlock Margin="10" Text="{Binding Search.SearchResult.Keyword}" HorizontalAlignment="Center" Foreground="Gray"/>
                        <TextBlock Margin="10" Text="{Binding ResultMessage}" HorizontalAlignment="Center" Foreground="Gray"/>
                    </StackPanel>
                </Grid>

                <!-- Busy Message -->
                <Grid x:Name="BusyMessage" 
                    HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,50,10,10"  Background="White"
                    Visibility="{Binding Search.IsBusy, Converter={StaticResource BoolToVisibility}}">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <Grid Width="34"/>
                        <TextBlock x:Name="textBlock_Busy" Text="処理中です" Foreground="Gray"/>
                        <TextBlock x:Name="BusyText" Margin="2,0" Width="30" Foreground="Gray">
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <StringAnimationUsingKeyFrames Storyboard.TargetName="BusyText"
                                                                       Storyboard.TargetProperty="Text"
                                                                       Duration="0:0:2.5"
                                                                       RepeatBehavior="Forever">
                                                <DiscreteStringKeyFrame Value="." KeyTime="0:0:0.0" />
                                                <DiscreteStringKeyFrame Value=".." KeyTime="0:0:0.5" />
                                                <DiscreteStringKeyFrame Value="..." KeyTime="0:0:1.0" />
                                                <DiscreteStringKeyFrame Value="...." KeyTime="0:0:1.5" />
                                            </StringAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>
                    </StackPanel>
                </Grid>

            </Grid>

        </DockPanel>

        <local:RenameManager x:Name="RenameManager" d:IsHidden="True" />

    </Grid>

</Window>
