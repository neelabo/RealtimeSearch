<!--
    Copyright (c) 2015-2016 Mitsuhiro Ito (nee)

    This software is released under the MIT License.
    http://opensource.org/licenses/mit-license.php
-->

<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RealtimeSearch"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="RealtimeSearch.MainWindow"
        Title="{Binding WindowTitle}" Height="600" Width="800" Icon="App.ico" 
        Topmost="{Binding Setting.IsTopmost}"
        Loaded="Window_Loaded" Closing="Window_Closing" Closed="Window_Closed" SourceInitialized="Window_SourceInitialized" >


    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <local:CommandToVisibilityConverter x:Key="CommandToVisibility"/>
        <local:StringToVisibilityConverter x:Key="StringToVisibility"/>

        <Style TargetType="{x:Type ListViewItem}">

            <EventSetter Event="Control.MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
            <EventSetter Event="UIElement.PreviewMouseMove" Handler="PreviewMouseMove_Event"/>
            <EventSetter Event="UIElement.PreviewMouseDown" Handler="PreviewMouseDown_Event"/>

            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="開く(_O)" Command="{x:Static local:MainWindow.OpenCommand}" />
                        <MenuItem Header="ファイルの場所を開く(_I)" Command="{x:Static local:MainWindow.OpenPlaceCommand}" />
                        <Separator/>
                        <MenuItem Header="ファイルをコピーする(_C)" Command="{x:Static local:MainWindow.CopyCommand}" />
                        <Separator/>
                        <MenuItem Header="削除(_D)" Command="{x:Static local:MainWindow.DeleteCommand}" />
                        <MenuItem Header="名前の変更(_M)" Command="{x:Static local:MainWindow.RenameCommand}"/>
                        <MenuItem Header="名前をコピーする" Command="{x:Static local:MainWindow.CopyNameCommand}" />
                        <Separator/>
                        <MenuItem Header="プロパティ(_R)" Command="{x:Static local:MainWindow.PropertyCommand}" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <DataTemplate x:Key="HeaderTemplateNormal">
            <TextBlock Text="{Binding}" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <Grid>
                <TextBlock Text="{Binding}" Margin="2"/>
                <Path x:Name="arrow" StrokeThickness="1" Stroke="Gray" HorizontalAlignment="Center" Data="M6,5 L10,1 14,5"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <Grid>
                <TextBlock Text="{Binding}" Margin="2"/>
                <Path x:Name="arrow" StrokeThickness = "1" Stroke = "Gray" HorizontalAlignment="Center" Data = "M6,1 L10,5 14,1"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

    </Window.Resources>



    <Grid  Margin="2">

        <DockPanel>

            <DockPanel DockPanel.Dock="Top" Margin="0,0,0,4" >
                <Button Style="{StaticResource IconButton}" DockPanel.Dock="Right" Width="26" Height="26" x:Name="SettingButton" Click="SettingButton_Click" Margin="2,0,0,0" ToolTip="設定">
                    <Image Width="16" Height="16" Source="{StaticResource ic_settings_24px}"/>
                </Button>
                <Grid>
                    <TextBox x:Name="keyword" Padding="0,0,40,0" Text="{Binding Keyword, Delay=200, UpdateSourceTrigger=PropertyChanged}"  KeyDown="keyword_KeyDown" MaxLines="256" VerticalContentAlignment="Center" BorderThickness="1,1,1,1" BorderBrush="#FFDDDDDD"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Style="{StaticResource IconButton}" Width="26" Height="26" Command="{x:Static local:MainWindow.SearchCommand}" ToolTip="再検索(Ctrl+R)">
                            <Image Width="16" Height="16" Source="{StaticResource ic_reflesh_24px}"/>
                        </Button>
                        <Button Style="{StaticResource IconButton}" Width="26" Height="26" Command="{x:Static local:MainWindow.WebSearchCommand}" ToolTip="Web検索(Ctrl+F)">
                            <Image Width="16" Height="16" Source="{StaticResource ic_public_24px}"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </DockPanel>

            <!-- Debug Info -->
            <StackPanel x:Name="DebugInfo" DockPanel.Dock="Bottom" Visibility="Collapsed">
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Background="#FFF8F8F8">
                    <TextBlock Margin="2" TextWrapping="NoWrap" Text="{Binding SearchEngine.CommandCount, StringFormat={}{0}\, }" />
                    <TextBlock Margin="2" TextWrapping="NoWrap" Text="{Binding SearchEngine.Command}" />
                </StackPanel>
                <TextBox x:Name="LogTextBox" DockPanel.Dock="Bottom" Height="64" VerticalScrollBarVisibility="Visible" />
            </StackPanel>


            <Grid DockPanel.Dock="Bottom" Margin="2">
                <TextBlock DockPanel.Dock="Bottom" x:Name="status" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Information}" TextDecorations="{x:Null}" />
            </Grid>

            <Grid>
                <ListView x:Name="listView01" Foreground="Black" ButtonBase.Click="GridViewColumnHeader_ClickHandler" ItemsSource="{Binding Files}" BorderThickness="0" 
                          FocusVisualStyle="{x:Null}"
                          HorizontalAlignment="Stretch"
                          ScrollViewer.CanContentScroll="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling">

                    <ListView.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>

                        <DataTemplate x:Key="myHeader">
                            <Label Content="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type GridViewColumn}}}"/>
                        </DataTemplate>

                        <DataTemplate x:Key="ItemFileNameTemplate">
                            <DockPanel ToolTip="{Binding Detail}">
                                <CheckBox DockPanel.Dock="Right" Template="{StaticResource PushpinCheckBoxTemplate}" Width="16" Height="16" IsChecked ="{Binding IsPushPin}" >
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>

                                <Image DockPanel.Dock="Left" Source="{Binding FileInfo.IconSource}" Width="16" Margin="0,0,4,0"/>
                                <TextBlock Text="{Binding .}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                            </DockPanel>
                        </DataTemplate>

                        <local:FileSizeConverter x:Key="FileSizeConverter"/>
                        <DataTemplate x:Key="ItemSizeTemplate">
                            <TextBlock Text="{Binding FileInfo.Size, Converter={StaticResource FileSizeConverter}}" HorizontalAlignment="Right"/>
                        </DataTemplate>

                    </ListView.Resources>

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical" CanVerticallyScroll="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.View>
                        <GridView ColumnHeaderTemplate="{StaticResource HeaderTemplateNormal}">
                            <GridViewColumn Width="280" CellTemplate="{StaticResource ItemFileNameTemplate}">
                                <GridViewColumnHeader Content="名前" Tag="."/>
                            </GridViewColumn>

                            <GridViewColumn Header="更新日時" Width="96" DisplayMemberBinding="{Binding FileInfo.LastWriteTime, StringFormat=yyyy/MM/dd HH:mm}" />
                            <GridViewColumn Header="種類" Width="96" DisplayMemberBinding="{Binding FileInfo.TypeName}"/>
                            <GridViewColumn Width="96" CellTemplate="{StaticResource ItemSizeTemplate}" >
                                <GridViewColumnHeader Content="サイズ" Tag="FileInfo.Size"/>
                            </GridViewColumn>

                            <GridViewColumn Header="フォルダー" Width="96" DisplayMemberBinding="{Binding DirectoryName}" />

                        </GridView>
                    </ListView.View>
                </ListView>

                <StackPanel Margin="0,40,0,0" Visibility="{Binding Path=SearchEngine.StateMessage, Converter={StaticResource StringToVisibility}}">
                    <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding SearchEngine.SearchKeyword}" HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SearchEngine.State}" Value="SearchResultEmpty">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
                        <Grid Visibility="{Binding ElementName=BusyText, Path=Visibility}" Width="34"/>
                        <TextBlock x:Name="textBlock_Busy" Text="{Binding Path=SearchEngine.StateMessage}" Foreground="Gray"/>
                        <TextBlock x:Name="BusyText" Margin="2,0" Width="30">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Gray"/>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SearchEngine.State}" Value="Search">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <StringAnimationUsingKeyFrames Storyboard.TargetName="BusyText"
                                                                       Storyboard.TargetProperty="Text"
                                                                       Duration="0:0:2.5"
                                                                       RepeatBehavior="Forever">
                                                <DiscreteStringKeyFrame Value="." KeyTime="0:0:0.0" />
                                                <DiscreteStringKeyFrame Value=".." KeyTime="0:0:0.5" />
                                                <DiscreteStringKeyFrame Value="..." KeyTime="0:0:1.0" />
                                                <DiscreteStringKeyFrame Value="...." KeyTime="0:0:1.5" />
                                            </StringAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>

                    </StackPanel>
                </StackPanel>
            </Grid>

        </DockPanel>

    </Grid>

</Window>
